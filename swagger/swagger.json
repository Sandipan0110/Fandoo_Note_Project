{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "Fundoo Notes App",
        "description": "Fundoo Notes Application",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "basePath": "/",
    "tags": [],
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "description": "Register New User",
                "parameters": [
                    {
                        "name": "Register",
                        "in": "body",
                        "description": "User that we want to register",
                        "schema": {
                            "$ref": "#/definitions/registerUser"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "New user is Registered"
                    },
                    "409": {
                        "description": "User Already Exist"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Login"
                ],
                "description": "Login User",
                "parameters": [
                    {
                        "name": "Login",
                        "in": "body",
                        "description": "User that we want to login",
                        "schema": {
                            "$ref": "#/definitions/loginUser"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/forgotpassword": {
            "post": {
                "tags": [
                    "ForgotPassword"
                ],
                "description": "Send password link",
                "parameters": [
                    {
                        "name": "Forgotpassword",
                        "in": "body",
                        "description": "Sent password resent link",
                        "schema": {
                            "$ref": "#/definitions/forgotpassword"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                }
            }
        },
        "/reset-Password": {
            "put": {
                "tags": [
                    "Reset Password"
                ],
                "description": "Already registered ? Then reset password successfully !",
                "parameters": [
                    {
                        "name": "Reset Password",
                        "in": "body",
                        "description": "Reset Password with Code",
                        "schema": {
                            "$ref": "#/definitions/resetPassword"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "reset password succesfully !"
                    },
                    "400": {
                        "description": "Incorrect Password for Reset password"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/createnotes": {
            "post": {
                "tags": [
                    "Create Notes"
                ],
                "description": "Create a Note !",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for Vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "name": "Create Note",
                        "in": "body",
                        "description": "Note's Body",
                        "schema": {
                            "$ref": "#/definitions/notes"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/notes"
                },
                "responses": {
                    "201": {
                        "description": "Create note Succesfully !"
                    },
                    "400": {
                        "description": "Please Enter Valid Token"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/getnotes": {
            "get": {
                "tags": [
                    "Get Notes"
                ],
                "description": "Get a Note !",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for Vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/notes"
                },
                "responses": {
                    "201": {
                        "description": "Get Note Succesfully !!"
                    },
                    "401": {
                        "description": "Please Enter Valid Token"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/getnotes/{id}": {
            "get": {
                "tags": [
                    "Get Notes"
                ],
                "description": "Get a Note by ID for Perticuler Person id !",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for Vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id of Note you want to Update",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "schema": {
                    "$ref": "#/definitions/notes"
                },
                "responses": {
                    "201": {
                        "description": "Create Note Succesfully !!"
                    },
                    "400": {
                        "description": "Please Enter Valid Token"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/updatenotes/{id}": {
            "put": {
                "tags": [
                    "update Notes"
                ],
                "description": "Update a Note by ID for Perticuler Person id !",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for Vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of Note you want to Update",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "body",
                        "name": "note",
                        "description": "Note Body",
                        "schema": {
                            "$ref": "#/definitions/updatenotes"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "update Note Succesfully !"
                    },
                    "401": {
                        "description": "Please Enter Valid Token"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/deletenotes/{id}": {
            "delete": {
                "tags": [
                    "Delete Notes"
                ],
                "description": "Delete a Note by ID for Perticuler Person id !",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for Vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of Note you want to Update",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Delete Note Succesfully !"
                    },
                    "401": {
                        "description": "Please Enter Valid Token"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/createlabel": {
            "post": {
                "tags": [
                    "Create Label"
                ],
                "description": "Creates a New label",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token for Validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "body",
                        "name": "label",
                        "description": "Label Attached to Note",
                        "schema": {
                            "$ref": "#/definitions/label"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Label Created Successfully"
                    },
                    "500": {
                        "description": "Label Not Created"
                    },
                    "400": {
                        "description": "Invalid Token"
                    }
                }
            }
        },
        "/getlabels": {
            "get": {
                "tags": [
                    "Get Labels"
                ],
                "description": "Gets All Labels",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token for Validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Labels Retrieved"
                    },
                    "500": {
                        "description": "Couldnt Retrieve Labels"
                    }
                }
            }
        },
        "/getlabel/{id}": {
            "get": {
                "tags": [
                    "Get Label by id"
                ],
                "description": "Gets Label by id",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token for Validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Label id",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Label Found"
                    },
                    "500": {
                        "description": "Label not Found"
                    },
                    "400": {
                        "description": "Invalid Token"
                    }
                }
            }
        },
        "/updatelabel/{id}": {
            "put": {
                "tags": [
                    "Update Label"
                ],
                "description": "Updates Label",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token for Validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Label id",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "body",
                        "name": "label",
                        "description": "Label to be Updated",
                        "schema": {
                            "$ref": "#/definitions/label"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Label Updated"
                    },
                    "500": {
                        "description": "Failed to Update Label"
                    },
                    "400": {
                        "description": "Invalid Token"
                    }
                }
            }
        },
        "/deletelabel/{id}": {
            "delete": {
                "tags": [
                    "Delete Label"
                ],
                "description": "Delete a Label by ID for Perticuler Person id !",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Authorization",
                        "description": "Token for Vaidation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Id of Label you want to Delete",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "Delete Note Succesfully !!"
                    },
                    "401": {
                        "description": "Please Enter Valid Token"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/addlabel/{id}": {
            "post": {
                "tags": [
                    "Add Label"
                ],
                "description": "Added Label",
                "parameters": [
                    {
                        "in": "header",
                        "name": "authorization",
                        "description": "Token for Validation",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "description": "Note id",
                        "schema": {
                            "type": "string",
                            "required": true
                        }
                    },
                    {
                        "in": "body",
                        "name": "Add Label",
                        "description": "Label to be Updated",
                        "schema": {
                            "$ref": "#/definitions/addlabel"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "label Added"
                    },
                    "500": {
                        "description": "Failed to Add Label"
                    },
                    "400": {
                        "description": "Invalid Token"
                    }
                }
            }
        }
    },
    "definitions": {
        "registerUser": {
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "loginUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "forgotpassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "resetPassword": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                }
            }
        },
        "notes": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "title": "Write a Title Here...",
                "description": "Write a Description Here..."
            }
        },
        "updatenotes": {
            "type": "object",
            "properties": {
                "title": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            },
            "example": {
                "title": "Write a Title Here...",
                "description": "Write a Description Here..."
            }
        },
        "label": {
            "type": "object",
            "properties": {
                "labelName": {
                    "type": "string"
                }
            }
        },
        "addlabel": {
            "type": "object",
            "properties": {
                "labelName": {
                    "type": "string"
                }
            }
        }
    }
}